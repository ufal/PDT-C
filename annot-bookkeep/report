#!/usr/bin/perl
use warnings;
use strict;
use feature qw{ say };

use FindBin;
use lib $FindBin::Bin;

use List;

my $from = shift;
my $to   = shift;

my $list = 'List::Builder::Config'->new->build;
my %sum;
$list->for_each(sub {
    my ($self, $file) = @_;
    next if $from && ($file->sent // $from) < $from;
    next if $to   && ($file->sent // $to  ) > $to;

    if ($file->sent && ! $file->done) {
        my $workdir = $self->workdir($file->annotator);
        die "$workdir not found" unless -d $workdir;

        my $name = $file->name;
        my $state = (-e "$workdir/$name.cz.a"
                     && ! -e "$workdir/done/$name.cz.a")
                  ? 'todo' : 'done';
        $sum{ $file->annotator }{$state}{sentences} += $file->sentences;
        $sum{ $file->annotator }{$state}{forms} += $file->forms;
    }
});

for my $state (qw( todo done )) {
    for my $annotator (sort keys %sum) {
            say join "\t", $annotator, $state,
                $sum{$annotator}{$state}{sentences} // 0,
                '(' . ($sum{$annotator}{$state}{forms} // 0) . ')';
    }
    print "\n";
}
