#!/usr/bin/perl
use warnings;
use strict;
use feature qw{ say };

use FindBin;
use lib $FindBin::Bin;
use if -t *STDOUT => 'Term::ANSIColor', qw{ colored };

use List;

my $from = shift;
my $to   = shift;

{   my %HIGHLIGHT = (sentences => 100, files => 3);
    sub highlight {
        my ($state, $dimension, $sum) = @_;
        my $quantity = $sum->{$state}{$dimension} // 0;
        if (-t *STDOUT
            && 'todo' eq $state
            && exists $HIGHLIGHT{$dimension}
            && $HIGHLIGHT{$dimension} > $quantity
        ) {
            return colored(['bright_red'], $quantity)
        }

        return $quantity
    }
}

my $list = 'List::Builder::Config'->new->build;
my %sum;
$list->for_each(sub {
    my ($self, $file) = @_;
    return if 'ALL' eq ($file->annotator // "");

    if ($file->sent) {
        my $workdir = $self->workdir($file->annotator);
        my $name = $file->name;
        my $state = (-e "$workdir/$name.cz.a"
                     && ! -e "$workdir/done/$name.cz.a")
                  ? 'todo' : 'done';
        if ('done' eq $state) {
            die "Missing done or not copied: $name" unless $file->done;

            return if $from && $file->done < $from;
            return if $to   && $file->done > $to;
        }
        $sum{ $file->annotator }{$state}{sentences} += $file->sentences;
        $sum{ $file->annotator }{$state}{forms} += $file->forms;
        $sum{ $file->annotator }{$state}{files} += 1;

    } else {
        $sum{free}{$_} += $file->$_ for qw( sentences forms );
        ++$sum{free}{files};
    }
});

for my $state (qw( todo done )) {
    for my $annotator (grep 'free' ne $_, sort keys %sum) {
            say join "\t", $annotator, $state,
                highlight($state, 'sentences', $sum{$annotator}),
                '(' . ($sum{$annotator}{$state}{forms} // 0) . ')',
                '[' . highlight($state, 'files', $sum{$annotator}) . ']';
    }
    print "\n";
}
say join "\t",
    'FREE',
    $sum{free}{sentences},
    "($sum{free}{forms})",
    "[$sum{free}{files}]";
