#!/usr/bin/perl
use warnings;
use strict;
use feature qw{ say };

use Text::Table;

use FindBin;
use lib $FindBin::Bin;
use if -t *STDOUT => 'Term::ANSIColor', qw{ colored };

use List;

my $skip_zero;
$skip_zero = 1, shift if @ARGV && $ARGV[0] eq '-z';

my $from = shift;
my $to   = shift;

{   my %HIGHLIGHT = (sentences => 150, files => 5);
    sub highlight {
        my ($state, $dimension, $sum) = @_;
        my $quantity = $sum->{$state}{$dimension} // 0;
        if (-t *STDOUT
            && 'todo' eq $state
            && exists $HIGHLIGHT{$dimension}
            && $HIGHLIGHT{$dimension} >= $quantity
        ) {
            return colored(['bright_red'], $quantity)
        }

        return $quantity
    }
}

my $list = 'List::Builder::Config'->new->build;
my %sum;
$list->for_each(sub {
    my ($self, $file) = @_;
    return if 'ALL' eq ($file->annotator // "");

    if ($file->sent) {
        my $workdir = $self->workdir($file->annotator);
        my $name = $file->name;

        my $is_in_progress = (-e "$workdir/$name.cz.a"
                              && ! -e "$workdir/done/$name.cz.a");
        die "Missing done or not copied: $name"
            unless $is_in_progress || $file->done;

        for my $who ('ALL', $file->annotator) {
            if ('ALL' eq $who) {
                next unless $file->done;

            } elsif ($file->done) {
                next if $from && $file->done < $from
                     || $to   && $file->done > $to;
            }

            my $state = $file->done ? 'done' : 'todo';
            $sum{$who}{$state}{sentences} += $file->sentences;
            $sum{$who}{$state}{forms} += $file->forms;
            $sum{$who}{$state}{files} += 1;
        }
    } else {
        $sum{ALL}{todo}{$_} += $file->$_ for qw( sentences forms );
        ++$sum{ALL}{todo}{files};
        my @files = grep ! m{/annotators/mam/[^/]+\.cz\.a$},
                    glob "${\ $self->svn}/annotators/???/${\ $file->name}.cz.a";
        die "${\$file->name} found in SVN but not booked in list.txt!\n"
            if @files;
    }
});

my $t = 'Text::Table'->new('who', 'sents',
                           {title => 'forms', align => 'right'},
                           {title => 'files', align => 'right'});
for my $state (qw( todo done )) {
    say "** $state **";
    for my $annotator (reverse sort keys %sum) {
        $t->add(
            $annotator,
            highlight($state, 'sentences', $sum{$annotator}),
            '(' . ($sum{$annotator}{$state}{forms} // 0) . ')',
            '[' . highlight($state, 'files', $sum{$annotator}) . ']')
            unless $skip_zero
                    && 'done' eq $state
                    && ! $sum{$annotator}{done}{files}
                || 'todo' eq $state
                    && $annotator =~ $list->inactive;
    }
    print $t->title, $t->rule('-'), $t->body, "\n";
    $t->clear;
}
