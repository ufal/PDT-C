#!/usr/bin/perl
use warnings;
use strict;
use feature qw{ say };

use FindBin;
use lib $FindBin::Bin;

use List;
use List::Util qw{ shuffle };
use Time::Piece;

die "Usage: $0 size who" unless 2 == @ARGV;

my $size = shift;
my $who  = shift;

my $list = 'List::Builder::Config'->new->build;
$list->shuffle;

my $date = localtime->strftime('%y%m%d');
my $sum = 0;

my @new_list;
$list->for_each(sub {
    my ($self, $file) = @_;
    unless ($file->sent || ($file->annotator // "") eq 'ALL') {
        if ($sum + $file->sentences < $size
            && ($file->comment // "") ne "!$who"
        ) {
            $sum += $file->sentences;
            $file->annotator($who);
            $file->sent($date);
        }
    }
    push @new_list, $file->serialise;
});

say $list->header;
for my $line (sort { $a cmp $b } @new_list) {
    say $line;
}
say STDERR "$sum/$size";
