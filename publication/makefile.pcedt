SHELL=/bin/bash

BASE_DIR:=$(PWD)

TREEX=PERL5LIB=${BASE_DIR}/lib:${PERL5LIB} treex
LRC=0
ifeq ($(LRC), 1)
LRC_FLAG=-p --jobs=100 --workdir='${BASE_DIR}/tmp/treex_runs/{NNN}-run.{XXXX}' --qsub "-v PERL5LIB=${BASE_DIR}/lib"
#LRC_FLAG=-p --jobs=100 --qsub "-v PERL5LIB=${BASE_DIR}/lib"
TREEX:=$(TREEX) $(LRC_FLAG)
endif


TMP_DIR=tmp

##################################################################################################################################
############################## RETRIEVE THE SCHEMA FILES FOR PDT-LIKE PARTS OF THE NEW PCEDT #####################################
##################################################################################################################################

ORIG_SCHEMA_DIR=PDT-C/resources
SCHEMA_DIR=$(TMP_DIR)/schema

$(SCHEMA_DIR) :
	mkdir $@
	cp PDT-C/resources/tdata_c_schema.xml $@ 
	cp PDT-C/resources/adata_c_schema.xml $@
	cp PDT-C/resources/mdata_c_schema.xml $@
	cp PDT-C/resources/wdata_c_schema.xml $@
	cp ${TMT_ROOT}/treex/lib/Treex/Block/Read/PDT_schema/pdata_eng_schema.xml $@
	cat /net/work/projects/pcedt-coref/lrec_2016/orig_data/schema/tdata_eng_schema.xml | \
		sed 's/target-node\.rf/target_node.rf/g' | \
		sed 's/informal-type/type/g' > $@/tdata_eng_schema.xml
	cp /net/work/projects/pcedt-coref/lrec_2016/orig_data/schema/adata_eng_schema.xml $@

##################################################################################################################################
############################ COPY ALL FILES TO THE SAME DIR, CHANGE REFERENCES AND SOME MARKUP ###################################
##################################################################################################################################
ORIG_DIR=$(TMP_DIR)/00.original

$(ORIG_DIR)/done :
	scripts/pcedt/structure_pcedt_parts.sh ../../PEDT/data PDT-C/data/PCEDT/pml $(dir $@)
	touch $@

##################################################################################################################################
########## TRANSFORM PDT-LIKE LANGUAGE PARTS TO A SINGLE-FILE TREEX REPRESENTATION - LANGUAGES ARE SENTENCE-ALIGNED ##############
##################################################################################################################################
UNALIGNED_DIR=$(TMP_DIR)/01.treex_unaligned

$(UNALIGNED_DIR)/done : $(ORIG_DIR)/done | $(SCHEMA_DIR)
	mkdir -p $(dir $@)
	mkdir -p $(TMP_DIR)/treex_runs
	$(TREEX) \
		Read::PCEDT from='!$(dir $<)/wsj*.en.t.gz' schema_dir=$| skip_finished='{$(dir $<)/wsj(....).*}{$(dir $@)/wsj$$1.treex.gz}' \
		Write::Treex substitute='{$(dir $<)/wsj(....).*}{$(dir $@)/wsj$$1.treex.gz}'
	touch $@

##################################################################################################################################
########## PROJECT ANODE ALIGNMENT FROM PCEDT 2.0 TO NEW PCEDT; FOR NEW TOKENS, ALIGNMNENT COMES FROM FAST_ALIGN  ################
##################################################################################################################################
ALIGNED_A_DIR=$(TMP_DIR)/02.treex_aligned_a

PCEDT20COREF=/net/data/pcedt2.0-coref/data

$(ALIGNED_A_DIR) :
	mkdir $@

#-----------------------------------------------------------------------------------------------------
#    1. print tokenized sentences of both sides of both the old and the new corpus
#-----------------------------------------------------------------------------------------------------

$(ALIGNED_A_DIR)/pcedt2.0coref_forms.%.txt : | $(ALIGNED_A_DIR)
	$(TREEX) \
		Read::Treex from='!$(PCEDT20COREF)/*/wsj_*.treex.gz' \
		Write::AttributeSentences to=- language=$* layer=a attributes='form' separator=' ' sent_sep='\n' \
	> $@
$(ALIGNED_A_DIR)/pcedt4pdtc_forms.%.txt : | $(ALIGNED_A_DIR)
	$(TREEX) \
		Read::Treex from='!$(UNALIGNED_DIR)/wsj*.treex.gz' \
		Write::AttributeSentences to=- language=$* layer=a attributes='form' separator=' ' sent_sep='\n' skip_nodes='defined $$_->tag && $$_->tag eq "-NONE-"' \
	> $@

#-----------------------------------------------------------------------------------------------------
#    2. extract alignment links from PCEDT 2.0 Core
#-----------------------------------------------------------------------------------------------------

$(ALIGNED_A_DIR)/pcedt2.0coref.align.txt : | $(ALIGNED_A_DIR)
	$(TREEX) \
		Read::Treex from='!$(PCEDT20COREF)/*/wsj_*.treex.gz' \
		PDTC::AlignLinksPrinter to=- language=en print_idx=1 \
	> $@

#-----------------------------------------------------------------------------------------------------
#    3. extract auxiliary alignment from the new PCEDT data using Fast Align
#-----------------------------------------------------------------------------------------------------

$(ALIGNED_A_DIR)/pcedt4pdtc.for_fastalign.txt : | $(ALIGNED_A_DIR)
	$(TREEX) \
		Read::Treex from='!$(UNALIGNED_DIR)/wsj*.treex.gz' \
		PDTC::PrintForFastAlign \
	> $@
$(ALIGNED_A_DIR)/pcedt4pdtc.lemma.for_fastalign.txt : $(ALIGNED_A_DIR)/pcedt4pdtc.for_fastalign.txt
	cat $< | perl -ne 'chomp $$_; my ($$en, $$cs) = split / \|\|\| /, $$_; print $$en."\n";' | \
		python fast_align_models/lemmatize_corpus.py -l en > $@.en
	cat $< | perl -ne 'chomp $$_; my ($$en, $$cs) = split / \|\|\| /, $$_; print $$cs."\n";' | \
		python fast_align_models/lemmatize_corpus.py -l cs > $@.cs
	paste $@.en $@.cs | sed 's/\t/ ||| /' > $@
	rm $@.en $@.cs
$(ALIGNED_A_DIR)/pcedt4pdtc.lemma_lc.for_fastalign.txt : $(ALIGNED_A_DIR)/pcedt4pdtc.lemma.for_fastalign.txt
	cat $< | perl -e 'binmode STDIN, ":utf8"; binmode STDOUT, ":utf8"; while (<STDIN>) { my $$line = lc($$_); print $$line; }' > $@

FAST_ALIGN_DIR=fast_align_models

$(ALIGNED_A_DIR)/pcedt4pdtc.lemma_lc.I10.fastalign.gdfa.txt : $(ALIGNED_A_DIR)/pcedt4pdtc.lemma_lc.for_fastalign.txt
	$(FAST_ALIGN_DIR)/fast_align/build/force_align.py \
		$(FAST_ALIGN_DIR)/models/czeng20.en-cs.lemma_lc.I10.fwd.params \
		$(FAST_ALIGN_DIR)/models/czeng20.en-cs.lemma_lc.I10.fwd.err \
		$(FAST_ALIGN_DIR)/models/czeng20.en-cs.lemma_lc.I10.rev.params \
		$(FAST_ALIGN_DIR)/models/czeng20.en-cs.lemma_lc.I10.rev.err \
			< $< > $@

#---------------------------------------------------------------------------------------------------------------------------------
#    4. use old alignment links, old and new tokens and the auxiliary alignment to project alignment links for the new PCEDT
#---------------------------------------------------------------------------------------------------------------------------------

$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt : $(ALIGNED_A_DIR)/pcedt4pdtc_forms.en.txt
$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt : $(ALIGNED_A_DIR)/pcedt2.0coref_forms.en.txt 
$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt : $(ALIGNED_A_DIR)/pcedt2.0coref.align.txt
$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt : $(ALIGNED_A_DIR)/pcedt2.0coref_forms.cs.txt
$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt : $(ALIGNED_A_DIR)/pcedt4pdtc_forms.cs.txt
$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt : $(ALIGNED_A_DIR)/pcedt4pdtc.lemma_lc.I10.fastalign.gdfa.txt
$(ALIGNED_A_DIR)/pcedt4pdtc.align.txt :
	paste $^ | python scripts/pcedt/map_aligns.py > $@
